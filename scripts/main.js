// Generated by CoffeeScript 1.6.3
(function() {
  var flag, for_rainbow, has_content, is_at_end, is_first, is_last, modify, no_range, position, refresh, resize, value;

  Array.prototype.last = function() {
    return this.slice(-1)[0];
  };

  Array.prototype.before = function(i) {
    return this.slice(0, i);
  };

  Array.prototype.after = function(i) {
    return this.slice(i + 1, this.length);
  };

  Array.prototype["delete"] = function(e) {
    return this.filter(function(t) {
      return t !== e;
    });
  };

  flag = 0;

  this.Markie = {
    source_list: [],
    source_list_before: function(index) {
      return this.source_list.before(index);
    },
    source_list_after: function(index) {
      return this.source_list.after(index);
    },
    clean: function() {
      return this.source_list = this.source_list.join('').split("\n")["delete"]('');
    },
    source_text: function() {
      return this.clean().join('\n\n');
    },
    source_text_before: function(index) {
      return this.source_list_before(index).join('');
    },
    source_text_after: function(index) {
      return this.source_list_after(index).join('');
    },
    up: function() {
      if (has_content) {
        modify();
        flag -= 1;
      }
      flag -= 1;
      return refresh();
    },
    down: function() {
      flag += 1;
      return refresh();
    }
  };

  resize = function() {
    return $('#current').autosize().trigger('autosize.resize');
  };

  position = function() {
    return document.getElementById('current').selectionStart;
  };

  no_range = function() {
    return position() === document.getElementById('current').selectionEnd;
  };

  is_first = function() {
    return flag === 0;
  };

  is_at_end = function() {
    return position() >= $('#current').val().length - 1;
  };

  is_last = function() {
    return this.Markie.source_list_after(flag).length === 0;
  };

  has_content = function() {
    return $('#current').val().length !== 0;
  };

  value = function() {
    return $('#current').val();
  };

  for_rainbow = function() {
    $('code[class^="lang-"]').each(function() {
      return $(this).attr('data-language', $(this).attr('class').slice(5));
    });
    return Rainbow.color();
  };

  modify = function() {
    this.Markie.source_list[flag] = $('#current').val();
    return flag += 1;
  };

  refresh = function() {
    $('#current').val(this.Markie.source_list[flag]);
    $('#before').html(marked(this.Markie.source_text_before(flag)));
    $('#after').html(marked(this.Markie.source_text_after(flag)));
    resize();
    return for_rainbow();
  };

  this.onKeyUp = function(e) {
    resize();
    if (e.keyCode === 13 && is_at_end() && $('#current').val().match(/\n\n$/)) {
      modify();
      return refresh();
    }
  };

  this.onKeyDown = function(e) {
    resize();
    if (e.keyCode === 38 && position() === 0 && !is_first()) {
      this.Markie.up();
    }
    if (e.keyCode === 8 && position() === 0 && no_range() && !is_first()) {
      this.Markie.up();
    }
    if (e.keyCode === 40 && is_at_end() && !is_last()) {
      return this.Markie.down();
    }
  };

}).call(this);

/*
//@ sourceMappingURL=main.map
*/
